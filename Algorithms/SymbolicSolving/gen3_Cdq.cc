/*
 * Automatically Generated from Mathematica.
 * Thu 12 Dec 2019 09:10:13 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t65;
  double t53;
  double t59;
  double t67;
  double t71;
  double t72;
  double t73;
  double t85;
  double t86;
  double t88;
  double t89;
  double t90;
  double t92;
  double t97;
  double t104;
  double t105;
  double t107;
  double t93;
  double t98;
  double t101;
  double t108;
  double t109;
  double t115;
  double t116;
  double t117;
  double t120;
  double t110;
  double t103;
  double t118;
  double t121;
  double t122;
  double t133;
  double t134;
  double t152;
  double t153;
  double t154;
  double t164;
  double t168;
  double t167;
  double t169;
  double t170;
  double t184;
  double t185;
  double t186;
  double t171;
  double t172;
  double t173;
  double t174;
  double t175;
  double t176;
  double t177;
  double t178;
  double t179;
  double t180;
  double t181;
  double t182;
  double t183;
  double t208;
  double t209;
  double t210;
  double t225;
  double t226;
  double t227;
  double t228;
  double t229;
  double t230;
  double t232;
  double t233;
  double t236;
  double t237;
  double t238;
  double t217;
  double t218;
  double t219;
  double t234;
  double t239;
  double t240;
  double t244;
  double t246;
  double t248;
  double t249;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t258;
  double t262;
  double t266;
  double t267;
  double t270;
  double t271;
  double t272;
  double t273;
  double t274;
  double t275;
  double t276;
  double t277;
  double t280;
  double t261;
  double t243;
  double t278;
  double t281;
  double t282;
  double t284;
  double t285;
  double t289;
  double t290;
  double t291;
  double t297;
  double t298;
  double t299;
  double t300;
  double t301;
  double t302;
  double t303;
  double t304;
  double t305;
  double t307;
  double t308;
  double t309;
  double t310;
  double t311;
  double t292;
  double t293;
  double t294;
  double t315;
  double t312;
  double t306;
  double t313;
  double t316;
  double t317;
  double t321;
  double t322;
  double t200;
  double t201;
  double t202;
  double t216;
  double t220;
  double t221;
  double t349;
  double t350;
  double t351;
  double t346;
  double t347;
  double t348;
  double t356;
  double t352;
  double t353;
  double t354;
  double t357;
  double t358;
  double t361;
  double t360;
  double t362;
  double t364;
  double t365;
  double t371;
  double t211;
  double t212;
  double t213;
  double t214;
  double t215;
  double t222;
  double t223;
  double t388;
  double t389;
  double t390;
  double t391;
  double t393;
  double t64;
  double t68;
  double t69;
  double t415;
  double t424;
  double t416;
  double t417;
  double t419;
  double t420;
  double t421;
  double t423;
  double t425;
  double t429;
  double t430;
  double t427;
  double t355;
  double t359;
  double t363;
  double t366;
  double t367;
  double t368;
  double t369;
  double t370;
  double t372;
  double t373;
  double t374;
  double t375;
  double t376;
  double t377;
  double t378;
  double t379;
  double t380;
  double t381;
  double t382;
  double t383;
  double t195;
  double t196;
  double t197;
  double t342;
  double t338;
  double t199;
  double t203;
  double t204;
  double t386;
  double t387;
  double t392;
  double t394;
  double t395;
  double t396;
  double t397;
  double t398;
  double t399;
  double t400;
  double t401;
  double t402;
  double t78;
  double t79;
  double t80;
  double t474;
  double t484;
  double t495;
  double t496;
  double t497;
  double t498;
  double t194;
  double t198;
  double t205;
  double t206;
  double t314;
  double t318;
  double t319;
  double t74;
  double t82;
  double t119;
  double t125;
  double t135;
  double t136;
  double t137;
  double t140;
  double t143;
  double t144;
  double t149;
  double t151;
  double t155;
  double t156;
  double t160;
  double t163;
  double t207;
  double t224;
  double t279;
  double t283;
  double t286;
  double t287;
  double t288;
  double t295;
  double t296;
  double t320;
  double t323;
  double t324;
  double t325;
  double t326;
  double t327;
  double t328;
  double t329;
  double t330;
  double t331;
  double t332;
  double t333;
  double t334;
  double t335;
  double t405;
  double t406;
  double t407;
  double t411;
  double t412;
  double t413;
  double t447;
  double t448;
  double t449;
  double t450;
  double t451;
  double t452;
  double t453;
  double t454;
  double t455;
  double t456;
  double t457;
  double t518;
  double t531;
  double t532;
  double t533;
  double t464;
  double t465;
  double t466;
  double t460;
  double t461;
  double t462;
  double t551;
  double t534;
  double t541;
  double t542;
  double t543;
  double t341;
  double t343;
  double t344;
  double t336;
  double t337;
  double t339;
  double t540;
  double t544;
  double t545;
  double t573;
  double t574;
  double t575;
  double t584;
  double t585;
  double t586;
  double t587;
  double t590;
  double t591;
  double t592;
  double t576;
  double t577;
  double t578;
  double t579;
  double t580;
  double t581;
  double t582;
  double t593;
  double t583;
  double t588;
  double t596;
  double t597;
  double t599;
  double t600;
  double t601;
  double t603;
  double t604;
  double t594;
  double t549;
  double t550;
  double t552;
  double t553;
  double t554;
  double t555;
  double t558;
  double t559;
  double t560;
  double t561;
  double t562;
  double t563;
  double t471;
  double t516;
  double t517;
  double t519;
  double t520;
  double t521;
  double t522;
  double t524;
  double t525;
  double t526;
  double t527;
  double t528;
  double t529;
  double t535;
  double t536;
  double t537;
  double t538;
  double t539;
  double t501;
  double t504;
  double t589;
  double t595;
  double t598;
  double t602;
  double t605;
  double t606;
  double t607;
  double t608;
  double t609;
  double t610;
  double t611;
  double t612;
  double t613;
  double t614;
  double t615;
  double t616;
  double t617;
  double t618;
  double t619;
  double t620;
  double t621;
  double t622;
  double t511;
  double t512;
  double t513;
  double t514;
  double t515;
  double t523;
  double t530;
  double t546;
  double t547;
  double t548;
  double t556;
  double t557;
  double t564;
  double t409;
  double t633;
  double t634;
  double t459;
  double t468;
  double t666;
  double t667;
  double t668;
  double t670;
  double t671;
  double t672;
  double t676;
  double t673;
  double t669;
  double t674;
  double t677;
  double t678;
  double t682;
  double t683;
  double t689;
  double t698;
  double t699;
  double t700;
  double t565;
  double t566;
  double t570;
  double t571;
  double t572;
  double t721;
  double t722;
  double t723;
  double t732;
  double t733;
  double t734;
  double t735;
  double t738;
  double t739;
  double t740;
  double t724;
  double t725;
  double t726;
  double t727;
  double t728;
  double t729;
  double t730;
  double t741;
  double t731;
  double t736;
  double t744;
  double t745;
  double t747;
  double t748;
  double t749;
  double t751;
  double t752;
  double t742;
  double t737;
  double t743;
  double t746;
  double t750;
  double t753;
  double t754;
  double t755;
  double t756;
  double t757;
  double t758;
  double t759;
  double t760;
  double t761;
  double t762;
  double t763;
  double t764;
  double t765;
  double t766;
  double t767;
  double t768;
  double t769;
  double t770;
  double t715;
  double t716;
  double t717;
  double t384;
  double t385;
  double t782;
  double t783;
  double t784;
  double t786;
  double t787;
  double t788;
  double t792;
  double t789;
  double t785;
  double t790;
  double t793;
  double t794;
  double t798;
  double t799;
  double t805;
  double t814;
  double t815;
  double t816;
  t65 = Cos(var1[1]);
  t53 = Cos(var1[0]);
  t59 = Sin(var1[1]);
  t67 = Sin(var1[0]);
  t71 = -0.125*var2[0]*t65*t53;
  t72 = 0.125*var2[1]*t59*t67;
  t73 = t71 + t72;
  t85 = Power(t65,2);
  t86 = -1.*var2[1]*t85;
  t88 = Power(t59,2);
  t89 = -1.*var2[1]*t88;
  t90 = t86 + t89;
  t92 = Power(t53,2);
  t97 = Power(t67,2);
  t104 = -1.*var2[0]*t92;
  t105 = -1.*var2[0]*t97;
  t107 = t104 + t105;
  t93 = 0.5*t92*t90;
  t98 = 0.5*t90*t97;
  t101 = 0. + t93 + t98;
  t108 = 0.5*t65*t107;
  t109 = 0. + t108;
  t115 = -0.5*t59*t107;
  t116 = 0. + t115;
  t117 = 0.01*t116;
  t120 = 0.01*t101;
  t110 = 0.01*t109;
  t103 = 0.3*t101;
  t118 = t103 + t110 + t117;
  t121 = 0.3*t109;
  t122 = t120 + t121 + t117;
  t133 = 0.03*t116;
  t134 = t120 + t110 + t133;
  t152 = -1.*t53*t118;
  t153 = -1.*t59*t67*t122;
  t154 = -1.*t65*t67*t134;
  t164 = Cos(var1[2]);
  t168 = Sin(var1[2]);
  t167 = t164*t59*t67;
  t169 = t65*t67*t168;
  t170 = t167 + t169;
  t184 = t53*t164*t59;
  t185 = t65*t53*t168;
  t186 = t184 + t185;
  t171 = 0.1875*var2[2]*t170;
  t172 = -0.25*t65*t53;
  t173 = -1.*t65*t53*t164;
  t174 = t53*t59*t168;
  t175 = t173 + t174;
  t176 = 0.1875*t175;
  t177 = t172 + t176;
  t178 = var2[0]*t177;
  t179 = 0.25*t59*t67;
  t180 = 0.1875*t170;
  t181 = t179 + t180;
  t182 = var2[1]*t181;
  t183 = t171 + t178 + t182;
  t208 = -1.*t53*t164*t59;
  t209 = -1.*t65*t53*t168;
  t210 = t208 + t209;
  t225 = -1.*t53*t90;
  t226 = Power(t164,2);
  t227 = -1.*var2[2]*t226;
  t228 = Power(t168,2);
  t229 = -1.*var2[2]*t228;
  t230 = t227 + t229;
  t232 = -1.*t53*t230;
  t233 = t225 + t232;
  t236 = -1.*t90*t67;
  t237 = -1.*t67*t230;
  t238 = t236 + t237;
  t217 = -1.*t65*t164*t67;
  t218 = t59*t67*t168;
  t219 = t217 + t218;
  t234 = -0.5*t53*t233;
  t239 = -0.5*t67*t238;
  t240 = 0. + t234 + t239;
  t244 = t65*t164;
  t246 = -1.*t59*t168;
  t248 = t244 + t246;
  t249 = 0.5*t107*t248;
  t251 = -1.*t164*t59*t67;
  t252 = -1.*t65*t67*t168;
  t253 = t251 + t252;
  t254 = 0.5*t253*t233;
  t255 = 0.5*t186*t238;
  t258 = t249 + t254 + t255;
  t262 = -1.*t164*t59;
  t266 = -1.*t65*t168;
  t267 = t262 + t266;
  t270 = 0.5*t107*t267;
  t271 = 0.5*t219*t233;
  t272 = t65*t53*t164;
  t273 = -1.*t53*t59*t168;
  t274 = t272 + t273;
  t275 = 0.5*t274*t238;
  t276 = t270 + t271 + t275;
  t277 = 0.01*t276;
  t280 = 0.01*t240;
  t261 = 0.01*t258;
  t243 = 0.3*t240;
  t278 = t243 + t261 + t277;
  t281 = 0.3*t258;
  t282 = t280 + t281 + t277;
  t284 = 0.03*t276;
  t285 = t280 + t261 + t284;
  t289 = t90*t67;
  t290 = t67*t230;
  t291 = t289 + t290;
  t297 = -0.5*t53*t238;
  t298 = -0.5*t53*t291;
  t299 = 0. + t297 + t298;
  t300 = 0.01*t299;
  t301 = 0.5*t210*t233;
  t302 = 0.5*t186*t233;
  t303 = 0.5*t253*t238;
  t304 = 0.5*t253*t291;
  t305 = 0. + t301 + t302 + t303 + t304;
  t307 = 0.5*t274*t233;
  t308 = 0.5*t175*t233;
  t309 = 0.5*t219*t238;
  t310 = 0.5*t219*t291;
  t311 = 0. + t307 + t308 + t309 + t310;
  t292 = -1.*t53*t278;
  t293 = t253*t282;
  t294 = t219*t285;
  t315 = 0.01*t305;
  t312 = 0.01*t311;
  t306 = 0.3*t305;
  t313 = t300 + t306 + t312;
  t316 = 0.03*t311;
  t317 = t300 + t315 + t316;
  t321 = 0.3*t299;
  t322 = t321 + t315 + t312;
  t200 = t65*t164*t67;
  t201 = -1.*t59*t67*t168;
  t202 = t200 + t201;
  t216 = -0.25*t65*t67;
  t220 = 0.1875*t219;
  t221 = t216 + t220;
  t349 = -1.*t92;
  t350 = -1.*t97;
  t351 = t349 + t350;
  t346 = -1.*t65*t164;
  t347 = t59*t168;
  t348 = t346 + t347;
  t356 = 0.005*t351*t267;
  t352 = 0.015*t351*t267;
  t353 = 0.005*t351*t248;
  t354 = t352 + t353;
  t357 = 0.15*t351*t248;
  t358 = t356 + t357;
  t361 = 0.005*t351*t348;
  t360 = 0.15*t351*t267;
  t362 = t360 + t361;
  t364 = 0.015*t351*t348;
  t365 = t356 + t364;
  t371 = t356 + t361;
  t211 = 0.1875*var2[2]*t210;
  t212 = -0.25*t53*t59;
  t213 = 0.1875*t210;
  t214 = t212 + t213;
  t215 = var2[1]*t214;
  t222 = var2[0]*t221;
  t223 = t211 + t215 + t222;
  t388 = 0.5*t107*t348;
  t389 = 0.5*t170*t233;
  t390 = 0.5*t210*t238;
  t391 = 0. + t388 + t389 + t390;
  t393 = 0. + t270 + t271 + t275;
  t64 = -0.125*var2[1]*t53*t59;
  t68 = -0.125*var2[0]*t65*t67;
  t69 = t64 + t68;
  t415 = -0.005*t65*t351;
  t424 = -0.005*t59*t351;
  t416 = -0.15*t59*t351;
  t417 = t415 + t416;
  t419 = 0.005*t65*t351;
  t420 = -0.015*t59*t351;
  t421 = t419 + t420;
  t423 = -0.015*t65*t351;
  t425 = t423 + t424;
  t429 = 0.15*t65*t351;
  t430 = t429 + t424;
  t427 = t415 + t424;
  t355 = t348*t354;
  t359 = t267*t358;
  t363 = t248*t362;
  t366 = t267*t365;
  t367 = t355 + t359 + t363 + t366;
  t368 = t107*t367;
  t369 = t210*t354;
  t370 = t274*t358;
  t372 = -1.*t67*t371;
  t373 = t186*t362;
  t374 = t274*t365;
  t375 = t369 + t370 + t372 + t373 + t374;
  t376 = t238*t375;
  t377 = t170*t354;
  t378 = t219*t358;
  t379 = -1.*t53*t371;
  t380 = t253*t362;
  t381 = t219*t365;
  t382 = t377 + t378 + t379 + t380 + t381;
  t383 = t233*t382;
  t195 = 0.25*t53*t59;
  t196 = 0.1875*t186;
  t197 = t195 + t196;
  t342 = 0.1875*var2[2]*t175;
  t338 = 0.1875*var2[2]*t202;
  t199 = 0.25*t65*t67;
  t203 = 0.1875*t202;
  t204 = t199 + t203;
  t386 = t267*t282;
  t387 = t348*t285;
  t392 = 0.03*t391;
  t394 = 0.01*t393;
  t395 = 0. + t392 + t394;
  t396 = t267*t395;
  t397 = 0.01*t391;
  t398 = 0.3*t393;
  t399 = 0. + t397 + t398;
  t400 = t248*t399;
  t401 = t386 + t387 + t396 + t400;
  t402 = t351*t401;
  t78 = 0.125*var2[1]*t53*t59;
  t79 = 0.125*var2[0]*t65*t67;
  t80 = t78 + t79;
  t474 = t419 + t424;
  t484 = t356 + t353;
  t495 = -1.*t53*t484;
  t496 = t219*t354;
  t497 = t253*t358;
  t498 = t495 + t496 + t497;
  t194 = 0.1875*var2[2]*t186;
  t198 = var2[1]*t197;
  t205 = var2[0]*t204;
  t206 = t194 + t198 + t205;
  t314 = t248*t313;
  t318 = t267*t317;
  t319 = t314 + t318;
  t74 = 5.*t69*t73;
  t82 = 5.*t80*t73;
  t119 = t67*t118;
  t125 = -1.*t53*t59*t122;
  t135 = -1.*t65*t53*t134;
  t136 = 0. + t119 + t125 + t135;
  t137 = -1.*t53*t90*t136;
  t140 = -1.*t67*t118;
  t143 = t53*t59*t122;
  t144 = t65*t53*t134;
  t149 = t140 + t143 + t144;
  t151 = -1.*t53*t90*t149;
  t155 = t152 + t153 + t154;
  t156 = t90*t67*t155;
  t160 = 0. + t152 + t153 + t154;
  t163 = -1.*t90*t67*t160;
  t207 = 10.*t183*t206;
  t224 = 10.*t183*t223;
  t279 = -1.*t67*t278;
  t283 = t186*t282;
  t286 = t274*t285;
  t287 = t279 + t283 + t286;
  t288 = t233*t287;
  t295 = t292 + t293 + t294;
  t296 = t291*t295;
  t320 = t107*t319;
  t323 = -1.*t67*t322;
  t324 = t186*t313;
  t325 = t274*t317;
  t326 = t292 + t293 + t294 + t323 + t324 + t325;
  t327 = t238*t326;
  t328 = t67*t278;
  t329 = t210*t282;
  t330 = t175*t285;
  t331 = -1.*t53*t322;
  t332 = t253*t313;
  t333 = t219*t317;
  t334 = t328 + t329 + t330 + t331 + t332 + t333;
  t335 = t233*t334;
  t405 = 0.125*var2[0]*t53*t59;
  t406 = 0.125*var2[1]*t65*t67;
  t407 = t405 + t406;
  t411 = -0.125*var2[1]*t65*t53;
  t412 = 0.125*var2[0]*t59*t67;
  t413 = t411 + t412;
  t447 = -0.005*t65*t107;
  t448 = -0.15*t59*t107;
  t449 = 0. + t447 + t448;
  t450 = t65*t449;
  t451 = -0.015*t65*t107;
  t452 = -0.005*t59*t107;
  t453 = 0. + t451 + t452;
  t454 = -1.*t59*t453;
  t455 = -1.*t59*t122;
  t456 = -1.*t65*t134;
  t457 = t450 + t454 + t455 + t456;
  t518 = 0. + t447 + t452;
  t531 = t164*t59;
  t532 = t65*t168;
  t533 = t531 + t532;
  t464 = var2[0]*t197;
  t465 = var2[1]*t204;
  t466 = t338 + t464 + t465;
  t460 = var2[1]*t177;
  t461 = var2[0]*t181;
  t462 = t342 + t460 + t461;
  t551 = 0. + t397 + t394;
  t534 = 0.1875*var2[2]*t533;
  t541 = -0.25*t65;
  t542 = 0.1875*t348;
  t543 = t541 + t542;
  t341 = 0.1875*var2[1]*t175;
  t343 = 0.1875*var2[0]*t170;
  t344 = t341 + t342 + t343;
  t336 = 0.1875*var2[0]*t186;
  t337 = 0.1875*var2[1]*t202;
  t339 = t336 + t337 + t338;
  t540 = 0.1875*var2[2]*t348;
  t544 = var2[1]*t543;
  t545 = t540 + t544;
  t573 = -1.*t85;
  t574 = -1.*t88;
  t575 = t573 + t574;
  t584 = -0.5*t575*t67*t274;
  t585 = -0.5*t53*t575*t219;
  t586 = t584 + t585;
  t587 = 0.01*t586;
  t590 = -0.5*t575*t67*t210;
  t591 = -0.5*t53*t575*t170;
  t592 = t590 + t591;
  t576 = 0.5*t92*t575;
  t577 = 0.5*t575*t97;
  t578 = t576 + t577;
  t579 = 0.01*t578;
  t580 = -0.5*t575*t67*t186;
  t581 = -0.5*t53*t575*t253;
  t582 = t580 + t581;
  t593 = 0.01*t592;
  t583 = 0.3*t582;
  t588 = t579 + t583 + t587;
  t596 = 0.03*t592;
  t597 = t596 + t587;
  t599 = 0.01*t582;
  t600 = 0.03*t586;
  t601 = t579 + t599 + t600;
  t603 = 0.3*t586;
  t604 = t593 + t603;
  t594 = t593 + t587;
  t549 = t274*t282;
  t550 = t210*t285;
  t552 = -1.*t67*t551;
  t553 = t274*t395;
  t554 = t186*t399;
  t555 = t549 + t550 + t552 + t553 + t554;
  t558 = t219*t282;
  t559 = t170*t285;
  t560 = -1.*t53*t551;
  t561 = t219*t395;
  t562 = t253*t399;
  t563 = t558 + t559 + t560 + t561 + t562;
  t471 = -0.625*t65*t53*t69;
  t516 = t53*t59*t449;
  t517 = t65*t53*t453;
  t519 = -1.*t67*t518;
  t520 = t65*t53*t122;
  t521 = -1.*t53*t59*t134;
  t522 = t516 + t517 + t519 + t520 + t521;
  t524 = -1.*t59*t67*t449;
  t525 = -1.*t65*t67*t453;
  t526 = -1.*t53*t518;
  t527 = -1.*t65*t67*t122;
  t528 = t59*t67*t134;
  t529 = t524 + t525 + t526 + t527 + t528;
  t535 = 0.25*t59;
  t536 = 0.1875*t533;
  t537 = t535 + t536;
  t538 = var2[1]*t537;
  t539 = t534 + t538;
  t501 = 10.*t204*t183;
  t504 = 10.*t177*t223;
  t589 = t274*t588;
  t595 = -1.*t67*t594;
  t598 = t274*t597;
  t602 = t210*t601;
  t605 = t186*t604;
  t606 = t589 + t595 + t598 + t602 + t605;
  t607 = t238*t606;
  t608 = t267*t588;
  t609 = t267*t597;
  t610 = t348*t601;
  t611 = t248*t604;
  t612 = t608 + t609 + t610 + t611;
  t613 = t107*t612;
  t614 = t219*t588;
  t615 = -1.*t53*t594;
  t616 = t219*t597;
  t617 = t170*t601;
  t618 = t253*t604;
  t619 = t614 + t615 + t616 + t617 + t618;
  t620 = t233*t619;
  t621 = -1.*t575*t67*t555;
  t622 = -1.*t53*t575*t563;
  t511 = Power(var2[1],2);
  t512 = -0.078125*t511*t65*t59;
  t513 = 5.*t407*t73;
  t514 = 5.*t69*t413;
  t515 = t107*t457;
  t523 = -1.*t90*t67*t522;
  t530 = -1.*t53*t90*t529;
  t546 = 10.*t539*t545;
  t547 = 10.*t183*t466;
  t548 = 10.*t462*t223;
  t556 = t238*t555;
  t557 = t107*t401;
  t564 = t233*t563;
  t409 = 0.625*t59*t67*t69;
  t633 = 0.01*t65*t53*t578;
  t634 = -0.01*t53*t59*t578;
  t459 = 10.*t197*t183;
  t468 = 10.*t181*t223;
  t666 = -0.5*t53*t575*t210;
  t667 = -0.5*t53*t575*t186;
  t668 = 0. + t666 + t667;
  t670 = -0.5*t53*t575*t274;
  t671 = -0.5*t53*t575*t175;
  t672 = 0. + t670 + t671;
  t676 = 0.01*t668;
  t673 = 0.01*t672;
  t669 = 0.3*t668;
  t674 = 0. + t669 + t673;
  t677 = 0.03*t672;
  t678 = 0. + t676 + t677;
  t682 = 0.3*t578;
  t683 = t682 + t599 + t587;
  t689 = 0. + t676 + t673;
  t698 = -1.*t53*t683;
  t699 = t253*t588;
  t700 = t219*t601;
  t565 = 0.1875*var2[1]*t533;
  t566 = t565 + t534;
  t570 = 1.875*t533*t545;
  t571 = 1.875*t202*t183;
  t572 = 1.875*t175*t223;
  t721 = -1.*t226;
  t722 = -1.*t228;
  t723 = t721 + t722;
  t732 = -0.5*t67*t274*t723;
  t733 = -0.5*t53*t219*t723;
  t734 = t732 + t733;
  t735 = 0.01*t734;
  t738 = -0.5*t67*t210*t723;
  t739 = -0.5*t53*t170*t723;
  t740 = t738 + t739;
  t724 = 0.5*t92*t723;
  t725 = 0.5*t97*t723;
  t726 = t724 + t725;
  t727 = 0.01*t726;
  t728 = -0.5*t67*t186*t723;
  t729 = -0.5*t53*t253*t723;
  t730 = t728 + t729;
  t741 = 0.01*t740;
  t731 = 0.3*t730;
  t736 = t727 + t731 + t735;
  t744 = 0.03*t740;
  t745 = t744 + t735;
  t747 = 0.01*t730;
  t748 = 0.03*t734;
  t749 = t727 + t747 + t748;
  t751 = 0.3*t734;
  t752 = t741 + t751;
  t742 = t741 + t735;
  t737 = t274*t736;
  t743 = -1.*t67*t742;
  t746 = t274*t745;
  t750 = t210*t749;
  t753 = t186*t752;
  t754 = t737 + t743 + t746 + t750 + t753;
  t755 = t238*t754;
  t756 = t267*t736;
  t757 = t267*t745;
  t758 = t348*t749;
  t759 = t248*t752;
  t760 = t756 + t757 + t758 + t759;
  t761 = t107*t760;
  t762 = t219*t736;
  t763 = -1.*t53*t742;
  t764 = t219*t745;
  t765 = t170*t749;
  t766 = t253*t752;
  t767 = t762 + t763 + t764 + t765 + t766;
  t768 = t233*t767;
  t769 = -1.*t67*t723*t555;
  t770 = -1.*t53*t723*t563;
  t715 = 10.*t566*t545;
  t716 = 10.*t339*t183;
  t717 = 10.*t344*t223;
  t384 = 1.875*t186*t183;
  t385 = 1.875*t170*t223;
  t782 = -0.5*t53*t210*t723;
  t783 = -0.5*t53*t186*t723;
  t784 = 0. + t782 + t783;
  t786 = -0.5*t53*t274*t723;
  t787 = -0.5*t53*t175*t723;
  t788 = 0. + t786 + t787;
  t792 = 0.01*t784;
  t789 = 0.01*t788;
  t785 = 0.3*t784;
  t790 = 0. + t785 + t789;
  t793 = 0.03*t788;
  t794 = 0. + t792 + t793;
  t798 = 0.3*t726;
  t799 = t798 + t747 + t735;
  t805 = 0. + t792 + t789;
  t814 = -1.*t53*t799;
  t815 = t253*t736;
  t816 = t219*t749;
  p_output1[0]=0. + t137 + t151 + t156 + t163 + t207 + t224 + t288 + t296 + t320 + t327 + t335 + t74 + t82 - 2.*(0. + t137 + t151 + t156 + t163 + t207 + t224 + t288 + t296 + t320 + t327 + t335 + t74 + t82) + (0. + 10.*t177*t206 + 10.*t183*t221 + t319*t351 + t471 + t238*t498 + t291*t498 + t501 + t504 + t233*(t274*t354 + t186*t358 - 1.*t484*t67) + t233*(t175*t354 + t210*t358 + t484*t67) - 0.625*t53*t65*t80 - 1.*t53*(t430*t53*t59 + t421*t53*t65 - 1.*t474*t67)*t90 - 1.*t53*(-1.*t430*t53*t59 - 1.*t421*t53*t65 + t474*t67)*t90)*var2[0] + (t368 + t376 + t383 + t402 + t409 + t351*t457 + t459 + 10.*t221*t462 + 10.*t177*t466 + t468 - 0.625*t407*t53*t65 + t107*(-1.*t425*t59 - 1.*t430*t59 + t417*t65 - 1.*t421*t65) - 0.625*t413*t65*t67 + 0.625*t53*t59*t73 - 1.*t67*(t417*t53*t59 - 1.*t421*t53*t59 + t425*t53*t65 + t430*t53*t65 - 1.*t427*t67)*t90 - 1.*t53*(-1.*t427*t53 - 1.*t417*t59*t67 + t421*t59*t67 - 1.*t425*t65*t67 - 1.*t430*t65*t67)*t90)*var2[1] + (10.*t177*t339 + 10.*t221*t344 + t368 + t376 + t383 + t384 + t385 + t402)*var2[2];
  p_output1[1]=t512 + t513 + t514 + t515 + t523 + t530 + t546 + t547 + t548 + t556 + t557 + t564 - 2.*(t512 + t513 + t514 + t515 + t523 + t530 + t546 + t547 + t548 + t556 + t557 + t564) + (0. + 10.*t181*t206 + 10.*t183*t214 + t409 + t459 + t468 - 1.*t136*t53*t575 - 1.*t149*t53*t575 - 1.*t287*t53*t575 - 1.*t334*t53*t575 + t155*t575*t67 - 1.*t160*t575*t67 + t295*t575*t67 - 1.*t326*t575*t67 + t107*(t248*t674 + t267*t678) + t233*(t186*t588 + t274*t601 - 1.*t67*t683) + t233*(t210*t588 + t175*t601 + t253*t674 + t219*t678 + t67*t683 - 1.*t53*t689) + t291*(t698 + t699 + t700) + t238*(t186*t674 + t274*t678 - 1.*t67*t689 + t698 + t699 + t700) + 0.625*t59*t67*t80 - 1.*t53*(0.01*t53*t578*t59 + t633 - 0.3*t578*t67)*t90 - 1.*t53*(t634 - 0.01*t53*t578*t65 + 0.3*t578*t67)*t90)*var2[0] + var2[1]*(10.*t214*t462 + 10.*t181*t466 + t471 + t501 + t504 + 10.*t539*t543 + 10.*t537*t545 - 1.*t529*t53*t575 - 0.625*t413*t53*t59 + t607 + t613 + t620 + t621 + t622 + t107*(-0.01*t578*t59 - 0.01*t578*t65) - 1.*t522*t575*t67 + 0.625*t407*t59*t67 + 0.625*t65*t67*t73 - 1.*(t633 + t634)*t67*t90 - 1.*t53*(0.01*t578*t59*t67 - 0.01*t578*t65*t67)*t90 - 0.15625*t59*t65*var2[1]) + (10.*t181*t339 + 10.*t214*t344 + 10.*t543*t566 + t570 + t571 + t572 + t607 + t613 + t620 + t621 + t622)*var2[2];
  p_output1[2]=t556 + t557 + t564 + t715 + t716 + t717 - 2.*(t556 + t557 + t564 + t715 + t716 + t717) + (1.875*t170*t206 + 1.875*t183*t210 + t384 + t385 - 1.*t287*t53*t723 - 1.*t334*t53*t723 + t295*t67*t723 - 1.*t326*t67*t723 + t107*(t248*t790 + t267*t794) + t233*(t186*t736 + t274*t749 - 1.*t67*t799) + t233*(t210*t736 + t175*t749 + t253*t790 + t219*t794 + t67*t799 - 1.*t53*t805) + t291*(t814 + t815 + t816) + t238*(t186*t790 + t274*t794 - 1.*t67*t805 + t814 + t815 + t816))*var2[0] + (1.875*t210*t462 + 1.875*t170*t466 + 1.875*t348*t539 + t570 + t571 + t572 + t755 + t761 + t768 + t769 + t770)*var2[1] + (1.875*t170*t339 + 1.875*t210*t344 + 1.875*t348*t566 + t570 + t571 + t572 + t755 + t761 + t768 + t769 + t770)*var2[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 1 && ncols == 3) && 
      !(mrows == 3 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 1 && ncols == 3) && 
      !(mrows == 3 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "gen3_Cdq.hh"

namespace SymExpression
{

void gen3_Cdq_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
