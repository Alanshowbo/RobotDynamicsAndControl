function [y1] = a1(x1)
    %MYNEURALNETWORKFUNCTION neural network simulation function.
    %
    % Generated by Neural Network Toolbox function genFunction, 14-Jul-2017 00:56:05.
    %
    % [y1] = myNeuralNetworkFunction(x1) takes these arguments:
    %   x = Qx2 matrix, input #1
    % and returns:
    %   y = Qx6 matrix, output #1
    % where Q is the number of samples.
    
    %#ok<*RPMT0>
    
    % ===== NEURAL NETWORK CONSTANTS =====
    
    % Input 1
    x1_step1.xoffset = [0.272413167549427;1.31374566056312];
    x1_step1.gain = [4.67717709630919;5.52856300537697];
    x1_step1.ymin = -1;
    
    % Layer 1
    b1 = [-5.7366787031281365472;-3.9372207059567911891;2.9406166609395398837;-3.0844120118438200784;-2.1455436215901078079;1.3766946053360644697;1.1503063217235720561;0.41376465353162272809;0.041907636274579718183;0.8923696895273321994;-1.2388167659889677275;3.457369150961764781;3.7560179914083304809;-3.4803795215670239038;5.2904979027835121741];
    IW1_1 = [3.2359405243371721639 -4.0117465684267772374;6.3778470241528406603 -0.43083415410625841568;-4.1433659151896442552 3.8418910070711151938;3.7296529639201967399 3.1291554035516546683;0.76025374289985558907 5.3091789316735615856;-5.2803220427645021218 1.7899227943085453951;-2.5894728476704380604 -4.7981123539120327237;0.12581735296201773666 5.1879216082668895282;3.705720191906239247 3.3072152194800739089;5.058906323144180206 1.370286968630623603;-3.6749155702547380287 4.020978975789212484;3.8212520209469524879 3.0669523297287226704;5.2305954544791335437 -1.5052327383815973239;0.10283959726607838636 6.1925321255821490496;3.6176298351343647575 -4.6527229008159904922];
    
    % Layer 2
    b2 = [-0.3627814466549756367;-0.17528960223058942525;-0.6341121605307630249;-0.33069925851427039998;-0.33964109804651676505;-0.33957541272310076685];
    LW2_1 = [0.35333561617793285414 0.76300715033529320497 0.72273617657691824334 -0.60052357215730889362 -0.2388063333846853209 -0.44196994083441726309 -0.61014251614892289766 0.042800824846939672375 -0.45290563468388211898 0.26585346253911662506 0.070127067175343713035 0.068565337053273278656 0.2819584099848003178 -0.15863107766514314423 -0.10138847196801101247;0.39743129076490013585 0.6741761022946748394 0.67045786992289269079 -0.54040470252539107854 -0.2704162491247701916 -0.42677105112473695536 -0.5835454813453526679 0.064744922353005843196 -0.43949570183707270532 0.27980017874320461946 0.030443488596799198054 0.02018482245165244271 0.19480358375491682588 -0.13490061696388375156 -0.15985345801932304699;0.16159992612007734181 0.77192414302860345998 0.58392656306784396225 -0.59321181803123912424 -0.15726893069943576053 -0.38029725681776299639 -0.53809544568580558455 0.073712531840904496616 -0.33022638205988247284 -0.010439925003924151875 0.05502150546370324774 0.18967075432113489342 0.37761355731719137285 -0.080014378284756826343 0.20042575907562587556;0.10371542611992562444 0.34019846144286325362 0.29354570714509881091 -0.13070531899421650168 0.20577558614735275144 -0.067582437287010826976 -0.17380507103393816326 -0.19983201472899758677 0.00083491068353554187542 0.31236172522243854655 -0.094261096944346936533 0.30431663135833730838 0.0047283278633890729603 -0.30633920667219888267 0.0017774242449097310548;-0.15467665969502755741 0.41991948228350395311 0.14844434248993335079 -0.013338616350463249755 0.08754956243380285219 -0.086950942667402275621 0.03273444705754973566 0.07816540856826544037 0.13689115292090356379 0.038053339668974339727 -0.034732449945489067555 0.10271707364525932415 -0.13711573276908506358 0.098039362247887062995 0.14007145161795872546;-0.15440133086307375465 0.41994623503449235447 0.14864578216357432483 -0.01357671301190770119 0.088493671820226937896 -0.087203134417010663704 0.032638042463074376509 0.078239482009859667722 0.13660484402351366628 0.038063649153005384151 -0.034424159905400944504 0.10267230810887292836 -0.13686173408478924385 0.096906757542160729124 0.1398613287922280124];
    
    % Output 1
    y1_step1.ymin = -1;
    y1_step1.gain = [4.93523156119333;3.26377786124171;2.9717280176542;2.5036360934238;2.00763411184286;2.00755958407077];
    y1_step1.xoffset = [-0.529239507554966;-0.664015467195546;-0.774969890116988;-0.912892163829312;-0.872665450542284;-0.872674634337445];
    
    % ===== SIMULATION ========
    
    % Dimensions
    Q = size(x1,1); % samples
    
    % Input 1
    x1 = x1';
    xp1 = mapminmax_apply(x1,x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    y1 = mapminmax_reverse(a2,y1_step1);
    y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
    y = bsxfun(@minus,x,settings.xoffset);
    y = bsxfun(@times,y,settings.gain);
    y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
    a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
    x = bsxfun(@minus,y,settings.ymin);
    x = bsxfun(@rdivide,x,settings.gain);
    x = bsxfun(@plus,x,settings.xoffset);
end
